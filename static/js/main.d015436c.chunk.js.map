{"version":3,"sources":["App/logo.svg","services/notification-service.js","services/data-service.js","product/product.js","product-condensed/product-condensed.js","wishlist/wishlist.js","services/http-service.js","App/App.js","App/serviceWorker.js","index.js"],"names":["module","exports","observers","instace","NotificationService","postNotification","notifName","data","obs","x","length","callBack","addObserver","observer","console","log","obj","push","removeObserver","slice","this","ns","instance","wishList","DataService","itemOnWishList","item","_id","addWishListItem","removeWishListItem","splice","ds","Product","props","onWishListChanged","newWishList","setState","onWishList","product","onButtonClicked","state","bind","btnClass","className","src","imgUrl","alt","title","price","href","onClick","Component","ProductCondensed","removeProduct","WishList","createWishList","map","key","http","getProducts","Promise","resolve","reject","fetch","then","response","App","loadData","self","products","err","productList","logo","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"6GAAAA,EAAOC,QAAU,IAA0B,kC,mQCEvCC,G,YAAY,IACZC,EAAU,KA2CCC,EAxCX,aAII,OAJU,yBAOdC,iBAAmB,SAACC,EAAWC,GAE3B,IADA,IAAIC,EAAMN,EAAUI,GACXG,EAAE,EAAGA,EAAED,EAAIE,OAAQD,IAAI,CAClBD,EAAIC,GACVE,SAASJ,KAXR,KAebK,YAAc,SAACN,EAAWO,EAAUF,GAChCG,QAAQC,IAAI,wBACFb,EAAUI,KAEhBJ,EAAUI,GAAa,IAE3B,IAAIU,EAAM,CAACH,SAAUA,EAAUF,SAASA,GACxCT,EAAUI,GAAWW,KAAKD,IAtBjB,KAyBbE,eAAiB,SAACL,EAAUP,GAExB,IAAIE,EAAON,EAAUI,GACrB,GAAIE,EACA,IAAI,IAAIC,EAAE,EAAGA,EAAED,EAAIE,OAAQD,IACvB,GAAII,IAAaL,EAAIC,GAAGI,SAAS,CAC7BL,EAAIW,MAAMV,EAAE,GACZP,EAAUI,GAAaE,EACvB,QAhCPL,IACDA,EAAUiB,MAEPjB,GCPXkB,EAAK,IAAIjB,EACTkB,EAAW,KACXC,EAAW,GAuCAC,EApCX,aAKI,OALU,yBAQdC,eAAiB,SAAAC,GACb,IAAK,IAAIjB,EAAI,EAAGA,EAAIc,EAASb,OAAQD,IACjC,GAAIc,EAASd,GAAGkB,KAAOD,EAAKC,IACxB,OAAO,EAGf,OAAO,GAdE,KAiBbC,gBAAkB,SAAAF,GACdH,EAASN,KAAKS,GACdL,EAAGhB,iBD3B2B,yBC2BckB,IAnBnC,KAsBbM,mBAAqB,SAAAH,GAEjB,IAAI,IAAIjB,EAAE,EAAGA,EAAGc,EAASb,OAAQD,IAC7B,GAAIc,EAASd,GAAGkB,MAAQD,EAAKC,IAAI,CAC7Bb,QAAQC,IAAI,gBACZQ,EAASO,OAAOrB,EAAG,GACnBY,EAAGhB,iBDpCmB,yBCoCsBkB,GAE5C,QA7BHD,IACDA,EAAWF,MAGRE,GCTXS,EAAK,IAAIP,EACTH,EAAK,IAAIjB,EAgDE4B,E,kDA9CX,WAAaC,GAAO,IAAD,8BACf,cAAOA,IAcXC,kBAAoB,SAACC,GACjB,EAAKC,SAAS,CAACC,WAAWN,EAAGN,eAAe,EAAKQ,MAAMK,YAhBxC,EAkBnBC,gBAAkB,WACV,EAAKC,MAAMH,WACXN,EAAGF,mBAAmB,EAAKI,MAAMK,SAEjCP,EAAGH,gBAAgB,EAAKK,MAAMK,UApBlC,EAAKE,MAAQ,CACTH,WAAYN,EAAGN,kBAEnB,EAAKc,gBAAkB,EAAKA,gBAAgBE,KAArB,gBACvB,EAAKP,kBAAoB,EAAKA,kBAAkBO,KAAvB,gBANV,E,gEASfpB,EAAGT,YFhB2B,yBEgBSQ,KAAMA,KAAKc,qB,6CAIlDb,EAAGH,eAAeE,KFpBY,4B,+BEiCxB,IACFsB,EADC,OAQL,OAJIA,EADAtB,KAAKoB,MAAMH,WACA,iBAEA,kBAEP,yBAAKM,UAAU,0BACnB,yBAAKA,UAAY,eAAeC,IAAKxB,KAAKa,MAAMK,QAAQO,OAAQC,IAAI,YACpE,yBAAKH,UAAU,eACX,wBAAIA,UAAU,cAAcvB,KAAKa,MAAMK,QAAQS,OAC/C,uBAAGJ,UAAU,aAAb,WAAkCvB,KAAKa,MAAMK,QAAQU,OACrD,uBAAGC,KAAK,IAAIC,QAAS,kBAAM,EAAKX,mBAAmBI,UAAWD,GAAWtB,KAAKoB,MAAMH,WAAY,uBAAyB,oB,GAxCnHc,aCFlBpB,G,YAAK,IAAIP,GA0BE4B,E,kDAvBX,WAAYnB,GAAO,IAAD,8BACd,cAAMA,IAIVoB,cAAgB,WACZvC,QAAQC,IAAI,eACZgB,EAAGF,mBAAmB,EAAKI,MAAMK,UALjC,EAAKe,cAAgB,EAAKA,cAAcZ,KAAnB,gBAFP,E,qDASR,IAAD,OACL,OACI,wBAAIE,UAAU,gCACV,yBAAKA,UAAU,OACX,uBAAGA,UAAU,yBAAyBO,QAAS,kBAAI,EAAKG,kBAAxD,KACA,uBAAGV,UAAU,IAAIvB,KAAKa,MAAMK,QAAQS,MAApC,MAA6C,+BAAK3B,KAAKa,MAAMK,QAAQU,c,GAf1DG,aCA3B9B,EAAK,IAAIjB,EA6CEkD,E,kDA3CX,WAAarB,GAAO,IAAD,8BACf,cAAMA,IAiBVC,kBAAoB,SAACC,GACjB,EAAKC,SAAS,CAACb,SAASY,KAnBT,EAsBnBoB,eAAiB,WAIb,OAHa,EAAKf,MAAMjB,SAASiC,KAAI,SAAClB,GAAD,OACjC,kBAAC,EAAD,CAAkBA,QAASA,EAASmB,IAAKnB,EAAQX,UAtBrD,EAAKa,MAAQ,CACTjB,SAAU,IAEd,EAAKgC,eAAiB,EAAKA,eAAed,KAApB,gBACtB,EAAKP,kBAAoB,EAAKA,kBAAkBO,KAAvB,gBANV,E,gEAWfpB,EAAGT,YJnB2B,yBImBSQ,KAAMA,KAAKc,qB,6CAIlDb,EAAGH,eAAeE,KJvBY,4B,+BIuC9B,OAAQ,yBAAKuB,UAAU,iBACnB,yBAAKA,UAAU,cACX,wBAAIA,UAAU,cAAd,aACA,wBAAIA,UAAU,cACTvB,KAAKmC,wB,GApCHJ,aCNnB5C,G,MAAO,CAAC,CAAE,IAAQ,2BAA4B,MAAU,MAAO,MAAU,oBAAqB,OAAW,6EAC7G,CAAE,IAAQ,2BAA4B,MAAU,MAAO,MAAU,sBAAuB,OAAW,6EACnG,CAAE,IAAQ,2BAA4B,MAAU,GAAI,MAAU,aAAc,OAAW,6EACvF,CAAE,IAAQ,2BAA4B,MAAU,OAAQ,MAAU,qBAAsB,OAAW,6EACnG,CAAE,IAAQ,2BAA4B,MAAU,MAAO,MAAU,oBAAqB,OAAW,gFACjG,CAAE,IAAQ,2BAA4B,MAAU,MAAO,MAAU,oBAAqB,OAAW,iFCM3FmD,EAAO,I,sCDJTC,YAAc,WASV,OARc,IAAIC,SAAQ,SAACC,EAASC,GAChCC,MAAM,iCACLC,MAAK,SAAAC,GAEFJ,EAAQtD,WCyDT2D,E,kDAvDb,WAAYjC,GAAQ,IAAD,8BACjB,cAAMA,IAWRkC,SAAW,WACT,IAAIC,EAAI,eACRV,EAAKC,cAAcK,MAAK,SAAAzD,GACtB6D,EAAKhC,SAAS,CAACiC,SAAU9D,OACxB,SAAA+D,QAhBc,EAqBnBC,YAAc,WAMZ,OALa,EAAK/B,MAAM6B,SAASb,KAAI,SAAAlB,GAAO,OAC1C,yBAAKK,UAAU,2BAA2Bc,IAAKnB,EAAQX,KACrD,kBAAC,EAAD,CAASW,QAASA,SArBtB,EAAKE,MAAQ,CACX6B,SAAU,IAGZ,EAAKF,SAAW,EAAKA,SAAS1B,KAAd,gBAChB,EAAK8B,YAAc,EAAKA,YAAY9B,KAAjB,gBACnB,EAAK0B,WATY,E,qDA+BjB,OACE,yBAAKxB,UAAU,OACb,yBAAKA,UAAU,cACb,yBAAKC,IAAK4B,IAAM7B,UAAU,WAAWG,IAAI,SACzC,4DAEF,yBAAKH,UAAU,6BACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,OACdvB,KAAKmD,gBAGR,yBAAK5B,UAAU,YACb,kBAAC,EAAD,c,GA9CIQ,aCFEsB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrB,MAAK,SAAAsB,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL3E,QAAQ2E,MAAMA,EAAMC,c","file":"static/js/main.d015436c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const NOTIF_WISHLIST_CHANGED = \"notif_wishlist_changed\";\r\n\r\nvar observers = {};\r\nlet instace = null;\r\n\r\nclass NotificationService {\r\n    constructor(){\r\n        if (!instace){\r\n            instace = this;\r\n        }\r\n        return instace;\r\n    }\r\n\r\n    postNotification = (notifName, data) => {\r\n        let obs = observers[notifName];\r\n        for (var x=0; x<obs.length; x++){\r\n            var obj = obs[x];\r\n            obj.callBack(data);\r\n        }\r\n    }\r\n\r\n    addObserver = (notifName, observer, callBack) => {\r\n        console.log(\"I was running first!\")\r\n        let obs = observers[notifName];\r\n        if (!obs){\r\n            observers[notifName] = [];\r\n        }\r\n        let obj = {observer: observer, callBack:callBack};\r\n        observers[notifName].push(obj);\r\n    }\r\n\r\n    removeObserver = (observer, notifName) => {\r\n\r\n        var obs =  observers[notifName];\r\n        if (obs) {\r\n            for(var x=0; x<obs.length; x++){\r\n                if (observer === obs[x].observer){\r\n                    obs.slice(x,1);\r\n                    observers[notifName] = obs;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default NotificationService;","import NotificationService, {NOTIF_WISHLIST_CHANGED} from './notification-service';\r\n\r\n\r\nlet ns = new NotificationService();\r\nlet instance = null;\r\nvar wishList = [];\r\n\r\nclass DataService {\r\n    constructor(){\r\n        if (!instance){\r\n            instance = this;\r\n        }\r\n\r\n        return instance;\r\n    }\r\n\r\n    itemOnWishList = item => {\r\n        for (var x = 0; x < wishList.length; x++){\r\n            if (wishList[x]._id == item._id){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    addWishListItem = item => {\r\n        wishList.push(item);\r\n        ns.postNotification(NOTIF_WISHLIST_CHANGED, wishList);\r\n    }\r\n\r\n    removeWishListItem = item => {\r\n        \r\n        for(var x=0; x< wishList.length; x++){\r\n            if (wishList[x]._id === item._id){\r\n                console.log(\"Call in here\")\r\n                wishList.splice(x, 1);\r\n                ns.postNotification(NOTIF_WISHLIST_CHANGED, wishList);\r\n                // console.log(wishList);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default DataService;","import React, {Component} from 'react';\r\nimport './product.css';\r\nimport DataService from '../services/data-service'\r\nimport NotificationService, {NOTIF_WISHLIST_CHANGED } from '../services/notification-service'\r\nlet ds = new DataService();\r\nlet ns = new NotificationService();\r\nclass Product extends Component {\r\n    constructor (props){\r\n        super (props)\r\n        this.state = {\r\n            onWishList: ds.itemOnWishList()\r\n        };\r\n        this.onButtonClicked = this.onButtonClicked.bind(this);\r\n        this.onWishListChanged = this.onWishListChanged.bind(this);\r\n    }\r\n    componentDidMount () { // This life cycle method is default from ReacJS\r\n        ns.addObserver(NOTIF_WISHLIST_CHANGED, this, this.onWishListChanged);\r\n    }\r\n\r\n    componentWillUnmount () { // This life cycle method is default from ReacJS\r\n        ns.removeObserver(this, NOTIF_WISHLIST_CHANGED );\r\n    }\r\n    onWishListChanged = (newWishList) => {\r\n        this.setState({onWishList:ds.itemOnWishList(this.props.product)});\r\n    }\r\n    onButtonClicked = () => {\r\n        if (this.state.onWishList) {\r\n            ds.removeWishListItem(this.props.product);\r\n        }else {\r\n            ds.addWishListItem(this.props.product);\r\n        }\r\n        \r\n    }\r\n    render() {\r\n        var btnClass;\r\n        \r\n        if (this.state.onWishList){\r\n            btnClass = 'btn btn-danger';\r\n        }else {\r\n            btnClass = 'btn btn-primary';\r\n        }\r\n        return (<div className=\"card flex-fill product\">\r\n            <img className = \"card-img-top\" src={this.props.product.imgUrl} alt=\"Product\"/>\r\n            <div className=\"card-block \">\r\n                <h4 className=\"card-title\">{this.props.product.title}</h4>\r\n                <p className=\"card-text\">Price: ${this.props.product.price}</p>\r\n                <a href=\"#\" onClick={() => this.onButtonClicked()} className={btnClass}>{this.state.onWishList? \"Remove From WishList\" : \"Add to Car\"}</a>\r\n            </div>\r\n        </div>)\r\n    }\r\n    \r\n}\r\n\r\nexport default Product;","import React, {Component} from 'react';\r\nimport './product-condensed.css';\r\nimport DataService from '../services/data-service'\r\n\r\nlet ds = new DataService();\r\n\r\nclass ProductCondensed extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.removeProduct = this.removeProduct.bind(this);\r\n\r\n    }\r\n    removeProduct = () => {\r\n        console.log(\"Call remove\")\r\n        ds.removeWishListItem(this.props.product);\r\n    }\r\n    render() {\r\n        return (\r\n            <li className=\"list-group-item pc-condensed\">\r\n                <div className=\"row\">\r\n                    <a className=\"btn btn-outline-danger\" onClick={()=>this.removeProduct()}>X</a> \r\n                    <p className=\"\">{this.props.product.title} | <b>${this.props.product.price}</b></p>\r\n                </div>\r\n                \r\n            </li>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default ProductCondensed;","import React, {Component} from 'react';\r\nimport './wishlist.css';\r\nimport DataService from '../services/data-service'\r\nimport NotificationService, {NOTIF_WISHLIST_CHANGED } from '../services/notification-service'\r\nimport ProductCondensed from '../product-condensed/product-condensed';\r\n\r\nlet ns = new NotificationService();\r\nclass WishList extends Component {\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n            wishList: []\r\n        }\r\n        this.createWishList = this.createWishList.bind(this);\r\n        this.onWishListChanged = this.onWishListChanged.bind(this);\r\n        \r\n    }\r\n\r\n    componentDidMount () { // This life cycle method is default from ReacJS\r\n        ns.addObserver(NOTIF_WISHLIST_CHANGED, this, this.onWishListChanged);\r\n    }\r\n\r\n    componentWillUnmount () { // This life cycle method is default from ReacJS\r\n        ns.removeObserver(this, NOTIF_WISHLIST_CHANGED );\r\n    }\r\n\r\n    onWishListChanged = (newWishList) => {\r\n        this.setState({wishList:newWishList});\r\n    }\r\n\r\n    createWishList = () => {\r\n        const list = this.state.wishList.map((product) => \r\n            <ProductCondensed product={product} key={product._id}></ProductCondensed>\r\n            );\r\n        return (list);\r\n        \r\n        \r\n    }\r\n    render() {\r\n        return (<div className=\"card wishlist\">\r\n            <div className=\"card-block\">\r\n                <h4 className=\"card-title\">Wish List</h4>\r\n                <ul className=\"list-group\">\r\n                    {this.createWishList()}\r\n                </ul>\r\n            </div>\r\n        </div>)\r\n    }\r\n    \r\n}\r\n\r\nexport default WishList;","import 'whatwg-fetch'\r\nlet data = [{ \"_id\" : \"5f0253fd647d78b1b64e22a9\", \"price\" : 40.99, \"title\" : \"Blink XT2 Outdoor\", \"imgUrl\" : \"https://images-na.ssl-images-amazon.com/images/I/51cNf8VwK3L._SL1000_.jpg\" },\r\n{ \"_id\" : \"5f0253fd647d78b1b64e22aa\", \"price\" : 39.99, \"title\" : \"Ring Video Doorbell\", \"imgUrl\" : \"https://images-na.ssl-images-amazon.com/images/I/51pGjo0OhJL._SL1000_.jpg\" },\r\n{ \"_id\" : \"5f0253fd647d78b1b64e22ab\", \"price\" : 50, \"title\" : \"Blink Mini\", \"imgUrl\" : \"https://images-na.ssl-images-amazon.com/images/I/61YnlcFA-jL._SL1000_.jpg\" },\r\n{ \"_id\" : \"5f0253fd647d78b1b64e22ad\", \"price\" : 199.29, \"title\" : \"Amazon eero Beacon\", \"imgUrl\" : \"https://images-na.ssl-images-amazon.com/images/I/41oLyfuAtZL._SL1000_.jpg\" },\r\n{ \"_id\" : \"5f0253fd647d78b1b64e22ae\", \"price\" : 34.99, \"title\" : \"Amazon Smart Plug\", \"imgUrl\" : \"https://images-na.ssl-images-amazon.com/images/I/51yy4dHf5VL._AC_SL1000_.jpg\" },\r\n{ \"_id\" : \"5f028f84647d78b1b64e22af\", \"price\" : 130.5, \"title\" : \"Ring Stick Up Cam\", \"imgUrl\" : \"https://images-na.ssl-images-amazon.com/images/I/51M%2BW1l2ShL._SL1000_.jpg\" }]\r\nclass HttpService {\r\n    getProducts = () => {\r\n        var promise = new Promise((resolve, reject) => {\r\n            fetch('http://localhost:3004/product')\r\n            .then(response => {\r\n                // resolve(response.json());\r\n                resolve(data);\r\n            })\r\n            \r\n        });\r\n        return promise;\r\n    }\r\n}\r\n\r\nexport default HttpService;\r\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport '../product/product'\nimport '../wishlist/wishlist'\n\n\nimport HttpService from '../services/http-service';\nimport Product from '../product/product';\nimport WishList from '../wishlist/wishlist';\n\nconst http = new HttpService();\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      products: []\n    };\n    // Bind functions\n    this.loadData = this.loadData.bind(this);\n    this.productList = this.productList.bind(this);\n    this.loadData()\n  }\n\n  loadData = () => {\n    var self = this;\n    http.getProducts().then(data => {\n      self.setState({products: data})\n    }, err => {\n\n    });\n  }\n\n  productList = () => {\n    const list = this.state.products.map(product => \n      <div className=\"col-sm-6 col-md-4 d-flex\" key={product._id}>\n        <Product product={product} ></Product>\n      </div>\n    );\n    return (list);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h3>Welcome to my shopping mall</h3>\n        </div>\n        <div className=\" container-fluid App-main\">\n          <div className=\"row\">\n            <div className=\"col-sm-8\">\n              <div className=\"row\">\n              {this.productList()}\n              </div>              \n            </div>\n            <div className=\"col-sm-4\">\n              <WishList/>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './App/serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}